Deploy Nginx Web Server on Kubernetes Cluster

# Some of the Nautilus team developers are developing a static website and they want to deploy it on Kubernetes cluster. 
# They want it to be highly available and scalable. Therefore, based on the requirements, the DevOps team has decided 
# to create deployment for it with multiple replicas. Below you can find more details about it:


# Create a deployment using nginx image with latest tag only and remember to mention tag i.e nginx:latest and name it as nginx-deployment. 
# App labels should be app: nginx-app and type: front-end. The container should be named as nginx-container; also make sure replica counts are 3.

# Also create a service named nginx-service and type NodePort. The targetPort should be 80 and nodePort should be 30011.

# Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.


---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx-app
    type: front-end
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30011
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx-app
    type: front-end
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-app
      type: front-end
  template:
    metadata:
      labels:
        app: nginx-app
        type: front-end
    spec:
      containers:
        - name: nginx-container
          image: nginx:latest


# Step 1: After changing necessary values: kubectl create -f <this file>
# Step 2: Wait for the pods to be in 'Running' state. Note down a pod name.
# Step 3: Verify: kubectl exec <podname> -- curl http://localhost/
#         You should get back a valid HTML content
# Step 4: Verify: Click 'Select port to view on Host 1' and provide the Node Port below.
#         You should see the page.